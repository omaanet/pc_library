For complete details about the project, its components, API routes, database structure, and more, see `Project_Tech_Stack.md`.
Use pnpm, not npm.
The server is always running and listening for requests, usually with `next dev --turbo -p 3005`, so there is no need to start it manually.

Database: Neon PostgreSQL
Preferred database library: use async Neon/Postgres client (`@neondatabase/serverless`)

Type definitions located in `src/types`.
Ensure compatibility with React Fast Refresh.
Always verify imports and exports to avoid unnecessary dependencies.
Avoid deeply nested blocks, prefer shallow nesting.
Avoid duplication of existing code.
Never overwrite `.env` file without explicit confirmation.

Prefer the use useEffect instead of React.useEffect (remove "React.").

All API routes must follow the file-based routing convention under `src/app/api`, using `[param]` to define dynamic segments and `route.ts` to implement HTTP method handlers, ensuring URL structures like `/api/resource/[id]` are correctly mapped.
For example: `src/app/api/epub/[book_id]/route.ts`.

Only touch code relevant to the task, avoid unrelated areas.
Follow the separation of concerns principle.
When creating or modifying the code, always find and implement the simplest solution: do not overcomplicate the code or the logic.
Be sure to check for existing and potentially reusable classes, utilities, or components before developing new frameworks or writing new code.
If a large change is necessary, STOP, inform the user, and ask for confirmation.

When in doubt, when you are not sure about something or you need more details or information, stop and ask user for clarification: if needed propose different options.
